/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import bean.Employ√©;
import bean.Planning;
import bean.Projet;
import com.sun.javafx.scene.control.skin.TextFieldSkin;
import dao.DaoException;
import dao.DaoFactory;
import dao.EmployeDao;
import dao.PlanningDao;
import dao.ProjetDao;
import java.awt.Color;
import java.awt.TextField;
import java.util.ArrayList;
import java.util.Date;
import javafx.scene.control.RadioButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Fabien
 */
public class JIFPlanning extends javax.swing.JInternalFrame {
    
    private DaoFactory factory = DaoFactory.getInstance();
    private PlanningDao daoPlan = factory.getPlanningDao();
    private EmployeDao employeDao = factory.getEmployeDao();
    private ProjetDao projetDao = factory.getProjetDao();
    private TableModelPlanning myPlanModel = new TableModelPlanning(daoPlan.selectPlanning());
    // private String search = "";

    public JIFPlanning() {
        initComponents();
        fillComponents();
        //   projComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();

        jTable1 = new JTable(myPlanModel);
        jComboEmp = new javax.swing.JComboBox();
        jTextSearch = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        jRadioDat = new javax.swing.JRadioButton();
        jRadioAll = new javax.swing.JRadioButton();
        jRadioNom = new javax.swing.JRadioButton();
        jRadioPro = new javax.swing.JRadioButton();
        jButAdd = new java.awt.Button();
        jButMod = new java.awt.Button();
        JButDel = new java.awt.Button();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Planning"));
        setVisible(true);

        jTable1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jScrollPane1.setViewportView(jTable1);

        jComboEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboEmpActionPerformed(evt);
            }
        });

        jTextSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSearchActionPerformed(evt);
            }
        });
        jTextSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextSearchKeyTyped(evt);
            }
        });

        label1.setText("recherche par nom:");

        buttonGroup1.add(jRadioDat);
        jRadioDat.setText("Date");
        jRadioDat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioDatActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioAll);
        jRadioAll.setText("All");
        jRadioAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAllActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioNom);
        jRadioNom.setText("Nom");
        jRadioNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioNomActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioPro);
        jRadioPro.setText("Projet");
        jRadioPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioProActionPerformed(evt);
            }
        });

        jButAdd.setLabel("Ajouter");
        jButAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButAddActionPerformed(evt);
            }
        });

        jButMod.setLabel("Modifier\n");
        jButMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButModActionPerformed(evt);
            }
        });

        JButDel.setLabel("Supprimer\n");
        JButDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButDelActionPerformed(evt);
            }
        });

        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(JButDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioAll)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jComboEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(265, 265, 265)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jRadioPro)
                                .addGap(241, 241, 241)
                                .addComponent(jRadioNom)))
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioDat)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(44, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(364, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioAll)
                        .addComponent(jRadioPro)
                        .addComponent(jRadioNom))
                    .addComponent(jRadioDat, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JButDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEmpActionPerformed
        Projet seleProjet = (Projet) jComboEmp.getSelectedItem();
        ArrayList<Planning> listePlannings = daoPlan.selectPlanningParProj(seleProjet.getIdProjet());
        myPlanModel.setMyList(listePlannings);

    }//GEN-LAST:event_jComboEmpActionPerformed

    private void jTextSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSearchActionPerformed

    private void jTextSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSearchKeyTyped
        
        char c = evt.getKeyChar();

        if (!Character.isLetter(c)) {
            if (!Character.isDigit(c)) {
                evt.consume();
            }
        }
        
        String search = String.valueOf(evt.getKeyChar()).trim();
        if (search.isEmpty()) {
            myPlanModel.setMyList(daoPlan.selectPlanningParEmp(search));
        } else {
            ArrayList<Planning> listePlannings = daoPlan.selectPlanningParEmp(search);
            search = jTextSearch.getText();
            myPlanModel.setMyList(listePlannings);
        }
    }//GEN-LAST:event_jTextSearchKeyTyped

    private void jRadioProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioProActionPerformed
        jComboEmp.setEnabled(true);
        jTextSearch.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
    }//GEN-LAST:event_jRadioProActionPerformed

    private void jRadioAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAllActionPerformed
        jComboEmp.setEnabled(false);
        jTextSearch.setEnabled(false);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);
        myPlanModel.setMyList(daoPlan.selectPlanning());
    }//GEN-LAST:event_jRadioAllActionPerformed

    private void jRadioDatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioDatActionPerformed
         jComboEmp.setEnabled(false);
        jTextSearch.setEnabled(false);
        jDateChooser1.setEnabled(true);
        jDateChooser2.setEnabled(true);

    }//GEN-LAST:event_jRadioDatActionPerformed

    private void jRadioNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioNomActionPerformed
        jComboEmp.setEnabled(false);
        jTextSearch.setEnabled(true);
        jDateChooser1.setEnabled(false);
        jDateChooser2.setEnabled(false);

    }//GEN-LAST:event_jRadioNomActionPerformed

    private void JButDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButDelActionPerformed
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "S√©lectionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            int rep = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer "
                    + myPlanModel.getValueAt(jTable1.convertRowIndexToModel(jTable1.getSelectedRow()), 0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION)
                try {
                daoPlan.deletePlanning((String) myPlanModel.getValueAt(jTable1.convertRowIndexToModel(jTable1.getSelectedRow()), 5));
                
            } catch (DaoException e) {
                JOptionPane.showMessageDialog(null, "Suppression impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
            }
        }
        // apr√®s la suppression : rafra√Æchir les donn√©es en relisant la BD
        myPlanModel.setMyList(daoPlan.selectPlanning());
    }//GEN-LAST:event_JButDelActionPerformed

    private void jButAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButAddActionPerformed
        JFPrincipale parent = (JFPrincipale) (this.getDesktopPane().getTopLevelAncestor());
        new JDPlanInsert(parent, "INSERTION PLANNING");
        myPlanModel.setMyList(daoPlan.selectPlanning());
    }//GEN-LAST:event_jButAddActionPerformed

    private void jButModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButModActionPerformed
        
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "S√©lectionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            // renvoie l'objet Appareil √† passer en param√®tre
            Planning plan = myPlanModel.getMyList(jTable1.convertRowIndexToModel(jTable1.getSelectedRow()));
            // r√©cup√®re la JFrame parente
            JFrame parent = (JFrame) (this.getDesktopPane().getTopLevelAncestor());
            new JDPlanModif(parent, "MODIFICATION PLANNING", plan);

            // apr√®s la modification : rafra√Æchir les donn√©es en relisant la BD
            myPlanModel.setMyList(daoPlan.selectPlanning());
        }
        myPlanModel.setMyList(daoPlan.selectPlanning());

    }//GEN-LAST:event_jButModActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        Date dateMin = jDateChooser1.getDate();
        Date dateMax = jDateChooser2.getDate();
        
        if (jRadioDat.isSelected()) {
            if (dateMin != null && dateMax != null) {
                ArrayList<Planning> listePlanning = daoPlan.selectPlanningDate(dateMin, dateMax);
                myPlanModel.setMyList(listePlanning);
            }else{
            JOptionPane.showMessageDialog(this, "choisir une date");
            }
        }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange
               Date dateMin = jDateChooser1.getDate();
        Date dateMax = jDateChooser2.getDate();
        
        if (jRadioDat.isSelected()) {
            if (dateMin != null && dateMax != null) {
                ArrayList<Planning> listePlanning = daoPlan.selectPlanningDate(dateMin, dateMax);
                myPlanModel.setMyList(listePlanning);
            }else{
            JOptionPane.showMessageDialog(this, "choisir une date");
            }
        }
    }//GEN-LAST:event_jDateChooser2PropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button JButDel;
    private javax.swing.ButtonGroup buttonGroup1;
    private java.awt.Button jButAdd;
    private java.awt.Button jButMod;
    private javax.swing.JComboBox jComboEmp;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JRadioButton jRadioAll;
    private javax.swing.JRadioButton jRadioDat;
    private javax.swing.JRadioButton jRadioNom;
    private javax.swing.JRadioButton jRadioPro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextSearch;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables

    private void fillComponents() {
        jDateChooser1.setDate(new Date());
        jDateChooser2.setDate(new Date());
        
        
        
        ArrayList<Projet> listeProjet = projetDao.selectProjets();
        listeProjet.add(0, new Projet(-1, "*"));
        for (Projet pro : listeProjet) {
            jComboEmp.addItem(pro);
        }
    }

//    private void projComponents() {
//        ArrayList<Projet> listeProjet = projetDao.selectProjets();
//        listeProjet.add(0, new Projet(-1, "*"));
//        for (Projet pro : listeProjet) {
//            jComboEmp.addItem(pro);
//        }
}
